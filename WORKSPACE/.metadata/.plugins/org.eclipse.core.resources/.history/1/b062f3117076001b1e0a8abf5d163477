'''
Created on Feb 24, 2021

@author: toannguyen
'''

import os, ast
from flask import Blueprint, render_template, session, redirect, url_for, abort, request, jsonify
from pprint import pprint
import logging





tempalte_path =  os.getcwd() + Enum.TemplateName.TEMPLATE_HTML_FOLDER
static_path =  os.getcwd() + Enum.TemplateName.STATIC_HTML_FOLDER
milestone_bp = Blueprint('milestone_bp', __name__, template_folder=tempalte_path, static_folder=static_path)


@milestone_bp.route(Enum.Route.ROUTE_MILESTONE, methods=[Enum.Route.METHOD_GET])
def milestone():
    logging.info(Enum.Route.ROUTE_MILESTONE)
    try:
        if Enum.SessionKeys.IS_LOGIN in session:
            if session[Enum.SessionKeys.IS_LOGIN]:
                request_dict = Utils.get_request_args()
                if Enum.SessionKeys.CURRENT_PROJECT_ID not in request_dict:
                    return (redirect(url_for("project_bp.home")))
                else:
                    obj   = MC()
                    if obj.validate_method(request_dict):
                        
                        return render_template("milestone.html", session = session, enum = Enum, obj=obj, request_dict = request_dict) 
                    else:
                        return (redirect(url_for("project_bp.home")))
            else:
                return (redirect(url_for("project_bp.login")))
        else:
            return (redirect(url_for("project_bp.login")))
    except Exception as e:
        logging.exception(e.message)
        print_debug(e.message)
        return abort(500, e.message)